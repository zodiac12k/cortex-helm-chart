apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cortex.fullname" . }}-ruler
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "cortex.name" . }}-ruler
    chart: {{ template "cortex.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    {{- toYaml .Values.ruler.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.ruler.replicas }}
  selector:
    matchLabels:
      app: {{ template "cortex.name" . }}-ruler
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.ruler.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app: {{ template "cortex.name" . }}-ruler
        name: {{ template "cortex.name" . }}-ruler
        release: {{ .Release.Name }}
        {{- with .Values.ruler.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
{{- if .Values.useExternalConfig }}
        checksum/config: {{ .Values.externalConfigVersion }}
{{- else }}
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
{{- end}}
        {{- with .Values.ruler.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "cortex.serviceAccountName" . }}
    {{- if .Values.ruler.priorityClassName }}
      priorityClassName: {{ .Values.ruler.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.ruler.securityContext | nindent 8 }}
      initContainers:
        {{- toYaml .Values.ruler.initContainers | nindent 8 }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-target=ruler"
            - "-config.file=/etc/cortex/cortex.yaml"
            - "-ruler.configs.url=http://{{ template "cortex.name" . }}-configs"
            - "-ruler.alertmanager-url=http://{{ template "cortex.name" . }}-alertmanager/api/prom/alertmanager/"
            {{- if .Values.memcached.enabled }}
            - -store.chunks-cache.memcached.addresses=dns+{{ template "cortex.fullname" . }}-memcached.{{ .Release.Namespace }}.svc.cluster.local:11211
            - -store.chunks-cache.memcached.timeout=100ms
            {{- end }}
          {{- range $key, $value := .Values.ruler.extraArgs }}
            - "-{{ $key }}={{ $value }}"
          {{- end }}
          volumeMounts:
            {{- if .Values.ruler.extraVolumeMounts }}
              {{ toYaml .Values.ruler.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: /etc/cortex
            - name: storage
              mountPath: "/data"
              subPath: {{ .Values.ruler.persistence.subPath }}
          ports:
            - name: http-metrics
              containerPort: {{ .Values.config.server.http_listen_port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.ruler.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.ruler.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.ruler.resources | nindent 12 }}
          securityContext:
            readOnlyRootFilesystem: true
          env:
            {{- if .Values.ruler.env }}
              {{- toYaml .Values.ruler.env | nindent 12 }}
            {{- end }}
{{- if .Values.ruler.extraContainers }}
{{ toYaml .Values.ruler.extraContainers | indent 8}}
{{- end }}
      nodeSelector:
        {{- toYaml .Values.ruler.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.ruler.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.ruler.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.ruler.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          secret:
{{- if .Values.useExternalConfig }}
            secretName: {{ .Values.externalConfigSecretName }}
{{- else }}
            secretName: {{ template "cortex.fullname" . }}
{{- end }}
{{- if .Values.ruler.extraVolumes }}
{{ toYaml .Values.ruler.extraVolumes | indent 8}}
{{- end }}
        - name: storage
          emptyDir: {}
